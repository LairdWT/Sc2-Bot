#pragma once

namespace sc2 {

static constexpr size_t NUM_TERRAN_UNITS = 17;

static constexpr sc2::UNIT_TYPEID TERRAN_UNIT_TYPES[NUM_TERRAN_UNITS] = {
    sc2::UNIT_TYPEID::TERRAN_MARINE,        sc2::UNIT_TYPEID::TERRAN_MARAUDER,      sc2::UNIT_TYPEID::TERRAN_REAPER,
    sc2::UNIT_TYPEID::TERRAN_GHOST,         sc2::UNIT_TYPEID::TERRAN_HELLION,       sc2::UNIT_TYPEID::TERRAN_WIDOWMINE,
    sc2::UNIT_TYPEID::TERRAN_CYCLONE,       sc2::UNIT_TYPEID::TERRAN_SIEGETANK,     sc2::UNIT_TYPEID::TERRAN_THOR,
    sc2::UNIT_TYPEID::TERRAN_VIKINGFIGHTER, sc2::UNIT_TYPEID::TERRAN_MEDIVAC,       sc2::UNIT_TYPEID::TERRAN_BANSHEE,
    sc2::UNIT_TYPEID::TERRAN_RAVEN,         sc2::UNIT_TYPEID::TERRAN_BATTLECRUISER, sc2::UNIT_TYPEID::TERRAN_LIBERATOR,
    sc2::UNIT_TYPEID::TERRAN_SCV,           sc2::UNIT_TYPEID::TERRAN_MULE
};

uint8_t GetTerranUnitTypeIndex(const sc2::UNIT_TYPEID UnitType) {
    switch (UnitType) {
        case sc2::UNIT_TYPEID::TERRAN_MARINE: return 0;
        case sc2::UNIT_TYPEID::TERRAN_MARAUDER: return 1;
        case sc2::UNIT_TYPEID::TERRAN_REAPER: return 2;
        case sc2::UNIT_TYPEID::TERRAN_GHOST: return 3;
        case sc2::UNIT_TYPEID::TERRAN_HELLION: return 4;
        case sc2::UNIT_TYPEID::TERRAN_HELLIONTANK: return 4;        // Hellbat
        case sc2::UNIT_TYPEID::TERRAN_WIDOWMINE: return 5;
        case sc2::UNIT_TYPEID::TERRAN_WIDOWMINEBURROWED: return 5;  // Burrowed Widow Mine maps to Widow Mine
        case sc2::UNIT_TYPEID::TERRAN_CYCLONE: return 6;
        case sc2::UNIT_TYPEID::TERRAN_SIEGETANK: return 7;
        case sc2::UNIT_TYPEID::TERRAN_SIEGETANKSIEGED: return 7;    // Sieged Tank maps to Siege Tank
        case sc2::UNIT_TYPEID::TERRAN_THOR: return 8;
        case sc2::UNIT_TYPEID::TERRAN_THORAP: return 8;             // Thor High Impact Payload maps to Thor
        case sc2::UNIT_TYPEID::TERRAN_VIKINGFIGHTER: return 9;
        case sc2::UNIT_TYPEID::TERRAN_VIKINGASSAULT: return 9;      // Viking Assault Mode maps to Viking Fighter
        case sc2::UNIT_TYPEID::TERRAN_MEDIVAC: return 10;
        case sc2::UNIT_TYPEID::TERRAN_BANSHEE: return 11;
        case sc2::UNIT_TYPEID::TERRAN_RAVEN: return 12;
        case sc2::UNIT_TYPEID::TERRAN_BATTLECRUISER: return 13;
        case sc2::UNIT_TYPEID::TERRAN_LIBERATOR: return 14;
        case sc2::UNIT_TYPEID::TERRAN_LIBERATORAG: return 14;       // Liberator Defender Mode maps to Liberator
        case sc2::UNIT_TYPEID::TERRAN_SCV: return 15;
        case sc2::UNIT_TYPEID::TERRAN_MULE: return 16;
        default: return 255;                                        // Invalid index
    }
}

static constexpr sc2::UNIT_TYPEID TERRAN_BUILDING_TYPES[] = {
    sc2::UNIT_TYPEID::TERRAN_COMMANDCENTER,     sc2::UNIT_TYPEID::TERRAN_ORBITALCOMMAND,
    sc2::UNIT_TYPEID::TERRAN_PLANETARYFORTRESS, sc2::UNIT_TYPEID::TERRAN_SUPPLYDEPOT,
    sc2::UNIT_TYPEID::TERRAN_BARRACKS,
    sc2::UNIT_TYPEID::TERRAN_BARRACKSREACTOR,  // Barracks Reactor
    sc2::UNIT_TYPEID::TERRAN_BARRACKSTECHLAB,  // Barracks Tech Lab
    sc2::UNIT_TYPEID::TERRAN_FACTORY,
    sc2::UNIT_TYPEID::TERRAN_FACTORYREACTOR,  // Factory Reactor
    sc2::UNIT_TYPEID::TERRAN_FACTORYTECHLAB,  // Factory Tech Lab
    sc2::UNIT_TYPEID::TERRAN_STARPORT,
    sc2::UNIT_TYPEID::TERRAN_STARPORTREACTOR,  // Starport Reactor
    sc2::UNIT_TYPEID::TERRAN_STARPORTTECHLAB,  // Starport Tech Lab
    sc2::UNIT_TYPEID::TERRAN_ENGINEERINGBAY,    sc2::UNIT_TYPEID::TERRAN_ARMORY,
    sc2::UNIT_TYPEID::TERRAN_FUSIONCORE,        sc2::UNIT_TYPEID::TERRAN_MISSILETURRET,
    sc2::UNIT_TYPEID::TERRAN_SENSORTOWER,       sc2::UNIT_TYPEID::TERRAN_GHOSTACADEMY,
    sc2::UNIT_TYPEID::TERRAN_REFINERY,          sc2::UNIT_TYPEID::TERRAN_REFINERYRICH
};

uint8_t GetTerranBuildingTypeIndex(const sc2::UNIT_TYPEID BuildingType) {
    switch (BuildingType) {
        case sc2::UNIT_TYPEID::TERRAN_COMMANDCENTER: return 0;
        case sc2::UNIT_TYPEID::TERRAN_ORBITALCOMMAND: return 1;
        case sc2::UNIT_TYPEID::TERRAN_PLANETARYFORTRESS: return 2;
        case sc2::UNIT_TYPEID::TERRAN_SUPPLYDEPOT: return 3;
        case sc2::UNIT_TYPEID::TERRAN_BARRACKS: return 4;
        case sc2::UNIT_TYPEID::TERRAN_BARRACKSREACTOR: return 5;
        case sc2::UNIT_TYPEID::TERRAN_BARRACKSTECHLAB: return 6;
        case sc2::UNIT_TYPEID::TERRAN_FACTORY: return 7;
        case sc2::UNIT_TYPEID::TERRAN_FACTORYREACTOR: return 8;
        case sc2::UNIT_TYPEID::TERRAN_FACTORYTECHLAB: return 9;
        case sc2::UNIT_TYPEID::TERRAN_STARPORT: return 10;
        case sc2::UNIT_TYPEID::TERRAN_STARPORTREACTOR: return 11;
        case sc2::UNIT_TYPEID::TERRAN_STARPORTTECHLAB: return 12;
        case sc2::UNIT_TYPEID::TERRAN_ENGINEERINGBAY: return 13;
        case sc2::UNIT_TYPEID::TERRAN_ARMORY: return 14;
        case sc2::UNIT_TYPEID::TERRAN_FUSIONCORE: return 15;
        case sc2::UNIT_TYPEID::TERRAN_MISSILETURRET: return 16;
        case sc2::UNIT_TYPEID::TERRAN_SENSORTOWER: return 17;
        case sc2::UNIT_TYPEID::TERRAN_GHOSTACADEMY: return 18;
        case sc2::UNIT_TYPEID::TERRAN_REFINERY: return 19;
        case sc2::UNIT_TYPEID::TERRAN_REFINERYRICH: return 20;
        default: return 255;
    }
}

static constexpr sc2::ABILITY_ID TERRAN_RESEARCH_UPGRADE_TYPES[27] = {
    sc2::ABILITY_ID::RESEARCH_STIMPACK,
    sc2::ABILITY_ID::RESEARCH_COMBATSHIELD,
    sc2::ABILITY_ID::RESEARCH_CONCUSSIVESHELLS,
    sc2::ABILITY_ID::RESEARCH_INFERNALPREIGNITER,
    sc2::ABILITY_ID::RESEARCH_DRILLINGCLAWS,
    sc2::ABILITY_ID::RESEARCH_SMARTSERVOS,
    sc2::ABILITY_ID::RESEARCH_CYCLONERAPIDFIRELAUNCHERS,
    sc2::ABILITY_ID::RESEARCH_LIBERATORAGMODE,
    sc2::ABILITY_ID::RESEARCH_RAVENCORVIDREACTOR,
    sc2::ABILITY_ID::RESEARCH_HISECAUTOTRACKING,
    sc2::ABILITY_ID::RESEARCH_TERRANSTRUCTUREARMORUPGRADE,
    sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYWEAPONSLEVEL1,
    sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYWEAPONSLEVEL2,
    sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYWEAPONSLEVEL3,
    sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYARMORLEVEL1,
    sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYARMORLEVEL2,
    sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYARMORLEVEL3,
    sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEWEAPONSLEVEL1,
    sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEWEAPONSLEVEL2,
    sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEWEAPONSLEVEL3,
    sc2::ABILITY_ID::RESEARCH_TERRANSHIPWEAPONSLEVEL1,
    sc2::ABILITY_ID::RESEARCH_TERRANSHIPWEAPONSLEVEL2,
    sc2::ABILITY_ID::RESEARCH_TERRANSHIPWEAPONSLEVEL3,
    sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEANDSHIPPLATINGLEVEL1,
    sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEANDSHIPPLATINGLEVEL2,
    sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEANDSHIPPLATINGLEVEL3,
    sc2::ABILITY_ID::RESEARCH_BATTLECRUISERWEAPONREFIT
};

uint8_t GetTerranUpgradeTypeIndex(const sc2::ABILITY_ID UpgradeType) {
    switch (UpgradeType) {
        case sc2::ABILITY_ID::RESEARCH_STIMPACK: return 0;
        case sc2::ABILITY_ID::RESEARCH_COMBATSHIELD: return 1;
        case sc2::ABILITY_ID::RESEARCH_CONCUSSIVESHELLS: return 2;
        case sc2::ABILITY_ID::RESEARCH_INFERNALPREIGNITER: return 3;
        case sc2::ABILITY_ID::RESEARCH_DRILLINGCLAWS: return 4;
        case sc2::ABILITY_ID::RESEARCH_SMARTSERVOS: return 5;
        case sc2::ABILITY_ID::RESEARCH_CYCLONERAPIDFIRELAUNCHERS: return 6;
        case sc2::ABILITY_ID::RESEARCH_LIBERATORAGMODE: return 7;
        case sc2::ABILITY_ID::RESEARCH_RAVENCORVIDREACTOR: return 8;
        case sc2::ABILITY_ID::RESEARCH_HISECAUTOTRACKING: return 9;
        case sc2::ABILITY_ID::RESEARCH_TERRANSTRUCTUREARMORUPGRADE: return 10;
        case sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYWEAPONSLEVEL1: return 11;
        case sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYWEAPONSLEVEL2: return 12;
        case sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYWEAPONSLEVEL3: return 13;
        case sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYARMORLEVEL1: return 14;
        case sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYARMORLEVEL2: return 15;
        case sc2::ABILITY_ID::RESEARCH_TERRANINFANTRYARMORLEVEL3: return 16;
        case sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEWEAPONSLEVEL1: return 17;
        case sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEWEAPONSLEVEL2: return 18;
        case sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEWEAPONSLEVEL3: return 19;
        case sc2::ABILITY_ID::RESEARCH_TERRANSHIPWEAPONSLEVEL1: return 20;
        case sc2::ABILITY_ID::RESEARCH_TERRANSHIPWEAPONSLEVEL2: return 21;
        case sc2::ABILITY_ID::RESEARCH_TERRANSHIPWEAPONSLEVEL3: return 22;
        case sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEANDSHIPPLATINGLEVEL1: return 23;
        case sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEANDSHIPPLATINGLEVEL2: return 24;
        case sc2::ABILITY_ID::RESEARCH_TERRANVEHICLEANDSHIPPLATINGLEVEL3: return 25;
        case sc2::ABILITY_ID::RESEARCH_BATTLECRUISERWEAPONREFIT: return 26;
        default: return 255;
    }
}

}  // namespace sc2
